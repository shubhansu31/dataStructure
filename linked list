# include <iostream>
using namespace std;

class node{
  public:
    int data;
    node *next;
};
class list{
  private:
    node *head,*tail;
  public:
    list(){
        head=NULL;
        tail=NULL;
    }
    void createNode(int value){
        node *temp = new node;
        temp->data=value;
        temp->next=NULL;
        if(head==NULL){
            head=temp;
            tail=temp;
            temp=NULL;
        }
        else{
            tail->next=temp;
            tail=temp;
        }
    }
    void showNode(){
        node *temp= new node;
        temp=head;
        while(temp!=NULL){
            cout<<temp->data<<endl;
            temp=temp->next;
        }
    }
    void insertAt(int pos,int value){
            if(pos==1){
                node *temp= new node;
                temp->data=value;
                temp->next=head;
                head=temp;
            }
            else{
                  node *pre= new node;
                  node *cur= new node;
                  node *temp= new node;
                  cur=head;
                  for(int i=1;i<pos;i++){
                         pre=cur;
                         cur=cur->next;
                  }
                 temp->data=value;
                 pre->next=temp;
                 temp->next=cur;
            }

    }
    void deleteEnd(){
        node *cur = new node;
        node *pre = new node;
        node *temp = new node;
        cur = head ;
        while (cur->next!=NULL){
            pre=cur;
            cur=cur->next;
        }
        tail=pre;
        pre->next=NULL;
        delete temp;
    }
    void deleteAt(int pos){
        if(pos==1){
            node *temp = new node;
            temp=head;
            head=head->next;
            delete temp;
        }
        else{
            node *cur= new node;
            node *pre= new node;
            node *temp= new node;
            cur=head;
            for(int i=1;i<pos;i++){
                pre=cur;
                cur=cur->next;
            }
            temp=cur;
            pre->next=temp->next;
            delete temp;
        }

    }
};

int main(){
    list li;
    for(int i=0;i<4;i++){
        li.createNode(i);
    }
    cout<<"______________create___________________"<<endl;
    li.showNode();
    li.insertAt(1,3);
    cout<<"_______________insert__________________"<<endl;
    li.showNode();
    cout<<"_______________delete_Start__________________"<<endl;
    li.deleteAt(1);
    li.showNode();
    cout<<"_______________delete_End_________________"<<endl;
    li.deleteEnd();
    li.showNode();
    cout<<"_______________delete_At_________________"<<endl;
    li.deleteAt(2);
    li.showNode();
    cout<<"____________________________________________"<<endl;
}
